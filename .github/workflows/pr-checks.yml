name: Pull Request Checks

on:
  pull_request:
    branches: [master, main]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate PR title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "Validating PR title: $PR_TITLE"

          if [ ${#PR_TITLE} -lt 1 ] || [ ${#PR_TITLE} -gt 100 ]; then
            echo "❌ PR title must be between 1 and 100 characters"
            exit 1
          fi

          echo "✅ PR title is valid"

      - name: Check PR description
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"

          if [ -z "$PR_BODY" ]; then
            echo "⚠️ PR description is empty but that's okay"
          else
            echo "✅ PR description provided"
          fi

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Nuxt files
        run: npx nuxi prepare

      - name: Run linting
        run: npm run lint

      - name: Check code formatting
        run: npx prettier --check "**/*.{js,vue,ts,json,md}"
        continue-on-error: true

  comprehensive-testing:
    name: Comprehensive Testing
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Set CI environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Run unit tests
        run: npm run test:run
        env:
          NODE_ENV: test
          CI: true

      - name: Test build process
        run: npm run build
        env:
          NODE_ENV: production

  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set CI environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  pr-ready-for-merge:
    name: PR Ready for Merge
    runs-on: ubuntu-latest
    needs:
      [pr-validation, quality-gates, comprehensive-testing, security-checks]
    if: always() && github.event.pull_request.draft == false

    steps:
      - name: Check all required checks
        run: |
          if [[ "${{ needs.pr-validation.result }}" == "success" &&
                "${{ needs.quality-gates.result }}" == "success" &&
                "${{ needs.comprehensive-testing.result }}" == "success" ]]; then
            echo "✅ All PR checks passed! Ready for review and merge."
          else
            echo "❌ Some PR checks failed. Please fix before merging."
            echo "PR Validation: ${{ needs.pr-validation.result }}"
            echo "Quality Gates: ${{ needs.quality-gates.result }}"
            echo "Comprehensive Testing: ${{ needs.comprehensive-testing.result }}"
            echo "Security Checks: ${{ needs.security-checks.result }}"
            exit 1
          fi
