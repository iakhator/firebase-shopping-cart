name: CI Pipeline

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  # Job 1: Code Quality and Linting
  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check "**/*.{js,vue,ts,json,md}"

  # Job 2: Unit Tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:run

      - name: Generate test coverage
        run: npm run test:coverage
        continue-on-error: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  # Job 3: Build Test
  build:
    name: Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Generate static files
        run: npm run generate
        continue-on-error: true

  # Job 4: Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run dependency check
        run: npx audit-ci --moderate

  # Job 5: Performance Check
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for performance testing
        run: npm run build

      - name: Bundle size check
        run: |
          echo "Checking bundle size..."
          du -sh .output/public/_nuxt/ || echo "No build output found"

  # Final job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [lint, test, build, security, typecheck]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.lint.result }}" == "success" &&
                "${{ needs.test.result }}" == "success" &&
                "${{ needs.build.result }}" == "success" &&
                "${{ needs.security.result }}" == "success" ]] then
            echo "‚úÖ All CI checks passed!"
            exit 0
          else
            echo "‚ùå Some CI checks failed:"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Test: ${{ needs.test.result }}"
            echo "Build: ${{ needs.build.result }}"
            echo "Security: ${{ needs.security.result }}"
            echo "Typecheck: ${{ needs.typecheck.result }}"
            exit 1
          fi

      - name: Success notification
        if: success()
        run: echo "üéâ CI pipeline completed successfully! Ready for merge."
